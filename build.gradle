plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'de.idiotischeryt'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url "https://repo.codemc.io/repository/maven-snapshots/"
    }

}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT")
    implementation("net.wesjd:anvilgui:1.10.3-SNAPSHOT")
    implementation("de.rapha149.signgui:signgui:2.4.2")
}

shadowJar {
    archiveFileName.set("BuildSystem-${version}.jar")
    destinationDirectory.set(file("server/1.21/plugins"))
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.jar {
    dependsOn shadowJar
    doLast {
        copy {
            from tasks.shadowJar.archiveFile.get()
            into archiveFile.get().asFile.parentFile
            rename { archiveFileName.get() }
        }
    }
}
